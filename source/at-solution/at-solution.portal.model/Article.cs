//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using at_solution.portal.primitive;

namespace at_solution.portal.entities
{
    public partial class Article : ArticlePrimitive
    {
        #region Primitive Properties
    		public override Nullable<int> User_Id
    		{
            get { return _user_Id; }
            set
            {        
                try
                {
                    _settingFK = true;
                    if (_user_Id != value)
                    {
                        if (User != null && User.Id != value)
                        {
                            User = null;
                        }
                        _user_Id = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
    		}
    		private Nullable<int> _user_Id;    
    

        #endregion
        #region Navigation Properties
    
        public User User
        {
            get { return _user; }
            set
            {
                if (!ReferenceEquals(_user, value))
                {
                    var previousValue = _user;
                    _user = value;
                    FixupUser(previousValue);
                }
            }
        }
        private User _user;
    
        public ICollection<ForumItem> ForumItems
        {
            get
            {
                if (_forumItems == null)
                {
                    var newCollection = new FixupCollection<ForumItem>();
                    newCollection.CollectionChanged += FixupForumItems;
                    _forumItems = newCollection;
                }
                return _forumItems;
            }
            set
            {
                if (!ReferenceEquals(_forumItems, value))
                {
                    var previousValue = _forumItems as FixupCollection<ForumItem>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupForumItems;
                    }
                    _forumItems = value;
                    var newValue = value as FixupCollection<ForumItem>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupForumItems;
                    }
                }
            }
        }
        private ICollection<ForumItem> _forumItems;
    
        public ICollection<Section> Sections
        {
            get
            {
                if (_sections == null)
                {
                    var newCollection = new FixupCollection<Section>();
                    newCollection.CollectionChanged += FixupSections;
                    _sections = newCollection;
                }
                return _sections;
            }
            set
            {
                if (!ReferenceEquals(_sections, value))
                {
                    var previousValue = _sections as FixupCollection<Section>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSections;
                    }
                    _sections = value;
                    var newValue = value as FixupCollection<Section>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSections;
                    }
                }
            }
        }
        private ICollection<Section> _sections;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupUser(User previousValue)
        {
            if (previousValue != null && previousValue.Articles.Contains(this))
            {
                previousValue.Articles.Remove(this);
            }
    
            if (User != null)
            {
                if (!User.Articles.Contains(this))
                {
                    User.Articles.Add(this);
                }
                if (User_Id != User.Id)
                {
                    User_Id = User.Id;
                }
            }
            else if (!_settingFK)
            {
                User_Id = null;
            }
        }
    
        private void FixupForumItems(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ForumItem item in e.NewItems)
                {
                    item.Article = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ForumItem item in e.OldItems)
                {
                    if (ReferenceEquals(item.Article, this))
                    {
                        item.Article = null;
                    }
                }
            }
        }
    
        private void FixupSections(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Section item in e.NewItems)
                {
                    if (!item.Articles.Contains(this))
                    {
                        item.Articles.Add(this);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Section item in e.OldItems)
                {
                    if (item.Articles.Contains(this))
                    {
                        item.Articles.Remove(this);
                    }
                }
            }
        }

        #endregion
    }
}
